<?xml version="1.0" encoding="UTF-8"?><project version="4"><component name="ChangeListManager"><ignored path=".idea/"/><ignored path="$PROJECT_DIR$/node_modules/"/><ignored path="$PROJECT_DIR$/.tmp/"/><ignored path="$PROJECT_DIR$/temp/"/><ignored path="$PROJECT_DIR$/tmp/"/><option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true"/><option name="SHOW_DIALOG" value="false"/><option name="HIGHLIGHT_CONFLICTS" value="true"/><option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false"/><option name="LAST_RESOLUTION" value="IGNORE"/></component><component name="ProjectLevelVcsManager"><ConfirmationsSetting value="2" id="Add"/></component><component name="PropertiesComponent"><property name="NewWatcherDialog.advanced.open" value="true"/><property name="WebServerToolWindowFactoryState" value="false"/><property name="auto.test.manager.delay" value="5000"/><property name="js.buildTools.grunt.grunt-cli.package" value="$USER_HOME$/AppData/Roaming/npm/node_modules/grunt-cli"/><property name="last_opened_file_path" value="$PROJECT_DIR$/src"/><property name="node.js.detected.package.eslint" value="true"/><property name="node.js.detected.package.standard" value="true"/><property name="node.js.path.for.package.eslint" value="node"/><property name="node.js.path.for.package.standard" value="node"/><property name="node.js.selected.package.eslint" value="L:\Work\_GIT\GitHub\NodeJs\templates\nodejs-templates\node_modules\eslint"/><property name="node.js.selected.package.standard" value="L:\Work\_GIT\GitHub\NodeJs\templates\nodejs-templates\node_modules\eslint"/><property name="nodejs.mocha.mocha_node_package_dir" value="$PROJECT_DIR$/node_modules/mocha"/><property name="nodejs_package_manager_path" value="npm"/><property name="restartRequiresConfirmation" value="false"/><property name="settings.editor.selected.configurable" value="watcher.settings"/></component><component name="RunManager" selected="Mocha.Watch Mocha"><configuration default="true" type="JavaScriptTestRunnerKarma"><config-file value="$PROJECT_DIR$/env/karma.conf.tests.js"/><karma-package-dir value="$PROJECT_DIR$/node_modules/karma"/><node-interpreter value="node"/><envs/><method v="2"/></configuration><configuration default="true" type="NodeJSConfigurationType" path-to-node="node" node-parameters="--max-old-space-size=4096" working-dir="$PROJECT_DIR$"><method v="2"/></configuration><configuration default="true" type="js.build_tools.grunt"><node-interpreter value="project"/><envs/><method v="2"/></configuration><configuration name="Intern" type="mocha-javascript-test-runner"><node-interpreter>node</node-interpreter><node-options>--max-old-space-size=4096</node-options><mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package><working-directory>$PROJECT_DIR$</working-directory><pass-parent-env>true</pass-parent-env><ui>bdd</ui><extra-mocha-options>--opts ./env/mocha/mocha.babel.opts</extra-mocha-options><test-kind>PATTERN</test-kind><test-pattern>./env/intern/intern-mocha.js</test-pattern><method v="2"/></configuration><configuration default="true" type="mocha-javascript-test-runner"><node-interpreter>node</node-interpreter><node-options>--max-old-space-size=4096</node-options><mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package><working-directory>$PROJECT_DIR$</working-directory><pass-parent-env>true</pass-parent-env><ui>bdd</ui><extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options><test-kind>PATTERN</test-kind><test-pattern>./src/test/tests/{common,node}/**/*.*</test-pattern><method v="2"/></configuration><configuration name="main > helpers > convert > jsToNodes.Circular structure throws" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true"><node-interpreter>node</node-interpreter><node-options>--max-old-space-size=4096</node-options><mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package><working-directory>$PROJECT_DIR$</working-directory><pass-parent-env>true</pass-parent-env><ui>bdd</ui><extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options><test-kind>TEST</test-kind><test-file>$PROJECT_DIR$/src/test/tests/main/helpers/convert/jsToNodes.js</test-file><test-names><name value="main > helpers > convert > jsToNodes"/><name value="Circular structure throws"/></test-names><method v="2"/></configuration><configuration name="main > helpers > converter" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true"><node-interpreter>node</node-interpreter><node-options>--max-old-space-size=4096</node-options><mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package><working-directory>$PROJECT_DIR$</working-directory><pass-parent-env>true</pass-parent-env><ui>bdd</ui><extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options><test-kind>SUITE</test-kind><test-file>$PROJECT_DIR$/src/test/tests/main/helpers/converter.js</test-file><test-names><name value="main > helpers > converter"/></test-names><method v="2"/></configuration><configuration name="main > helpers > converter.list" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true"><node-interpreter>node</node-interpreter><node-options>--max-old-space-size=4096</node-options><mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package><working-directory>$PROJECT_DIR$</working-directory><pass-parent-env>true</pass-parent-env><ui>bdd</ui><extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options><test-kind>TEST</test-kind><test-file>$PROJECT_DIR$/src/test/tests/main/helpers/converter.js</test-file><test-names><name value="main > helpers > converter"/><name value="list"/></test-names><method v="2"/></configuration><configuration name="main > main.postcss async require" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true"><node-interpreter>node</node-interpreter><node-options>--max-old-space-size=4096</node-options><mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package><working-directory>$PROJECT_DIR$</working-directory><pass-parent-env>true</pass-parent-env><ui>bdd</ui><extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options><test-kind>TEST</test-kind><test-file>$PROJECT_DIR$/src/test/tests/main/main.js</test-file><test-names><name value="main > main"/><name value="postcss async require"/></test-names><method v="2"/></configuration><configuration name="main > postcssToJs.postcss syntax es6 from string and exist path" type="mocha-javascript-test-runner" temporary="true" nameIsGenerated="true"><node-interpreter>node</node-interpreter><node-options>--max-old-space-size=4096</node-options><mocha-package>$PROJECT_DIR$/node_modules/mocha</mocha-package><working-directory>$PROJECT_DIR$</working-directory><pass-parent-env>true</pass-parent-env><ui>bdd</ui><extra-mocha-options>--opts ./env/mocha/mocha.babel.opts --watch</extra-mocha-options><test-kind>TEST</test-kind><test-file>$PROJECT_DIR$/src/test/tests/main/helpers/convert/convertPostcssJs.js</test-file><test-names><name value="main > postcssToJs"/><name value="postcss syntax es6 from string and exist path"/></test-names><method v="2"/></configuration><list><item itemvalue="Mocha.Coverage Mocha"/><item itemvalue="Mocha.Watch Mocha"/><item itemvalue="Mocha.Intern"/><item itemvalue="Mocha.main > helpers > converter"/><item itemvalue="Mocha.main > helpers > converter.list"/><item itemvalue="Mocha.main > postcssToJs.postcss syntax es6 from string and exist path"/><item itemvalue="Mocha.main > helpers > convert > jsToNodes.Circular structure throws"/><item itemvalue="Mocha.main > main.postcss async require"/></list><recent_temporary><list><item itemvalue="Mocha.main > main.postcss async require"/><item itemvalue="Mocha.main > helpers > convert > jsToNodes.Circular structure throws"/><item itemvalue="Mocha.main > postcssToJs.postcss syntax es6 from string and exist path"/><item itemvalue="Mocha.main > helpers > converter"/><item itemvalue="Mocha.main > helpers > converter.list"/></list></recent_temporary></component></project>